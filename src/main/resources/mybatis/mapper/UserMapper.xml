<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.bill.system.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.bill.system.entity.User" >
    <id column="accountNumber" property="accountnumber" jdbcType="VARCHAR" />
    <result column="id" property="id" jdbcType="INTEGER" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="onlyId" property="onlyid" jdbcType="VARCHAR" />
    <result column="location" property="location" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="role" property="role" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.bill.system.entity.UserWithBLOBs" extends="BaseResultMap" >
    <result column="address" property="address" jdbcType="VARBINARY" />
    <result column="Signature" property="signature" jdbcType="VARBINARY" />
  </resultMap>
  <sql id="Base_Column_List" >
    accountNumber, id, nickname, name, password, age, sex, birthday, onlyId, location, 
    status, email, date, role
  </sql>
  <sql id="Blob_Column_List" >
    address, Signature
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    where accountNumber = #{accountnumber,jdbcType=VARCHAR}
  </select>

  <update id="updatePassword">
    update users set password = #{password,jdbcType=VARCHAR}
    where email = #{email,jdbcType=VARCHAR};

  </update>



  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from users
    where accountNumber = #{accountnumber,jdbcType=VARCHAR}
  </delete>


  <update id="updateByPrimaryKeySelective" parameterType="com.bill.system.entity.UserWithBLOBs" >
    update users
    <set >
      <if test="id != null" >
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="onlyid != null" >
        onlyId = #{onlyid,jdbcType=VARCHAR},
      </if>
      <if test="location != null" >
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="role != null" >
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARBINARY},
      </if>
      <if test="signature != null" >
        Signature = #{signature,jdbcType=VARBINARY},
      </if>
    </set>
    where accountNumber = #{accountnumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.bill.system.entity.UserWithBLOBs" >
    update users
    set id = #{id,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      onlyId = #{onlyid,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARBINARY},
      Signature = #{signature,jdbcType=VARBINARY}
    where accountNumber = #{accountnumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bill.system.entity.User" >
    update users
    set id = #{id,jdbcType=INTEGER},
      nickname = #{nickname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=CHAR},
      birthday = #{birthday,jdbcType=DATE},
      onlyId = #{onlyid,jdbcType=VARCHAR},
      location = #{location,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      role = #{role,jdbcType=VARCHAR}
    where accountNumber = #{accountnumber,jdbcType=VARCHAR}
  </update>

  <select id="selectLoginUser" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from users
    where
    (accountNumber = #{accountnumber,jdbcType=VARCHAR} or email = #{accountnumber,jdbcType=VARCHAR})
    and password=#{password,jdbcType=VARCHAR};
  </select>

  <insert id="insert" parameterType="com.bill.system.entity.User" >
    insert into users (accountnumber, email, date,
      password)
    values (#{accountnumber,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP},
      #{password,jdbcType=VARCHAR}
      )
  </insert>
</mapper>